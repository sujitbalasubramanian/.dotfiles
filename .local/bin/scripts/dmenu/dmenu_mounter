#!/bin/sh

notify_pipe() {
    read notification
    notify-send "$notification"
}

disk() {
    case $mode in 
        "mount")
            mount=$(lsblk -l -o NAME,LABEL,TYPE,MOUNTPOINT | \
                    awk '/[part|disk] $/ {print $1 ": " $2}' | \
                    dmenu -i -p "select disk: " | cut -d':' -f 1)
            [ ! -z $mount ] && notify-send "$(udisksctl mount -b "/dev/$mount")"
            ;;
        "unmount")
            unmount=$(lsblk -l -o NAME,LABEL,TYPE,MOUNTPOINT |  \
                      awk '/[part|disk] \/.*$/ {print $1 ": " $2}' | \
                      dmenu -i -p "select disk: " | cut -d ':' -f 1)
            [ ! -z $unmount ] && notify-send "$(udisksctl unmount -f --no-user-interaction -b "/dev/$unmount")"
            ;;
        *)
            notify-send "invalid mode";;
    esac
}

phone() {
    phone=$(gio mount -li | grep activation_root | cut -d= -f2 | dmenu -p "select phone:")

    if [ -z $phone ]; then
        notify-send "select devices"
        exit -1
    fi

    case $mode in 
        "mount")
            gio mount $phone 2>&1 | notify_pipe
            ;;
        "unmount")
            gio mount -u $phone 2>&1 | notify_pipe
            ;;
        *)
            notify-send "invalid mode";;
    esac
}

while getopts ":m:u:" opt ; do
    case $opt in
        m) 
            mode="mount"
            device=$OPTARG
            ;;
        u)
            mode="unmount"
            device=$OPTARG
            ;;
        \?) echo "invalid option  -$OPTARG" >&2 
            exit -1;;
    esac
done

case $device in
    "disk")
        if ! [ -x "$(command -v udisksctl)" ]; then
            notify-send "Error: udisksctl is not installed."
            exit -1
        fi
        disk
        ;;
    "phone")
        if ! [ -x "$(command -v gio)" ]; then
            notify-send "Error: gio is not installed."
            exit -1
        fi
        phone
        ;;
    *)
        notify-send "Invalid device";;
esac
